name: Tests Runner

on: 
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  linux-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.8', '3.11']
    name: Test for ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          cache: 'pip'
      - name: Install dependencies (Linux)
        run: sudo apt-get install -y libqhull-dev
        if: runner.os == 'Linux'
      - name: Install dependencies (macOS)
        run: brew install qhull
        if: runner.os == 'macOS'
      - name: Install python dependencies
        run: |
          pip install --upgrade pip setuptools wheel
          pip install pip-tools pytest
          python -m piptools compile --resolver=backtracking -o requirements.txt pyproject.toml
          pip install -r requirements.txt
      - name: Build and install
        run: pip install .
      - name: Test
        run: pytest

  windows-test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.11']
    defaults:
      run:
        shell: pwsh
    name: Test for ${{ matrix.python-version }} on windows-latest
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - uses: ilammy/msvc-dev-cmd@v1
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install build dependencies (pip)
        run: |
          pip install --upgrade pip setuptools wheel
          pip install pip-tools pytest ninja conan==1.60
          python -m piptools compile --resolver=backtracking -o requirements.txt pyproject.toml
          pip install -r requirements.txt
      - name: Install build dependencies (conan)
        run: |
          conan install . -s compiler.version=16
      - name: Build Python ${{ matrix.python-version }} wheel
        run: python setup.py install --user
        env:
          CMAKE_GENERATOR: "Ninja"
          CMAKE_TOOLCHAIN_FILE: "conan_paths.cmake"
      - name: Test
        run: pytest
